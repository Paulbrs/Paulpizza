'use client'

import { cn } from '@/shared/lib/utils';
import React, { useState } from 'react';
import { useRouter } from 'next/navigation';
import { Dialog, DialogContent } from '@/shared/components/ui/dialog';
import { Button } from '../ui';
import { Plus } from 'lucide-react';
import Image from 'next/image';
import { Notification } from './notification';
import { useCart } from '@/shared/context/cart-context';

interface Props {
    product: {
        id: number;
        name: string;
        price: number;
        imageUrl: string;
        categoryId?: number;
    };
    className?: string;
}

const getProductDescription = (name: string, categoryId?: number): { description: string; ingredients: string } => {
    // –ü–∏—Ü—Ü—ã
    if (categoryId === 1) {
        switch (name) {
            case '–ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏':
                return {
                    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ –∏ –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π. –û—Å—Ç—Ä—ã–π –≤–∫—É—Å –∏ –∞—Ä–æ–º–∞—Ç –∏—Ç–∞–ª—å—è–Ω—Å–∫–æ–π –∫—É—Ö–Ω–∏.',
                    ingredients: '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, —á–µ—Å–Ω–æ–∫'
                };
            case '–ü–∏—Ü—Ü–∞ –ì—Ä–∏–±–Ω–∞—è':
                return {
                    description: '–ù–µ–∂–Ω–∞—è –ø–∏—Ü—Ü–∞ —Å —à–∞–º–ø–∏–Ω—å–æ–Ω–∞–º–∏ –∏ —Å—ã—Ä–Ω—ã–º —Å–æ—É—Å–æ–º. –ò–¥–µ–∞–ª—å–Ω—ã–π –≤—ã–±–æ—Ä –¥–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –≥—Ä–∏–±–æ–≤.',
                    ingredients: '–®–∞–º–ø–∏–Ω—å–æ–Ω—ã, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Å—ã—Ä–Ω—ã–π —Å–æ—É—Å, —á–µ—Å–Ω–æ–∫'
                };
            case '–ü–∏—Ü—Ü–∞ –•–∞–ª–∞–ø–µ–Ω—å—ë':
                return {
                    description: '–û—Å—Ç—Ä–∞—è –ø–∏—Ü—Ü–∞ —Å —Ö–∞–ª–∞–ø–µ–Ω—å—ë –∏ –∂–≥—É—á–∏–º –ø–µ—Ä—Ü–µ–º. –î–ª—è —Ç–µ—Ö, –∫—Ç–æ –ª—é–±–∏—Ç –ø–æ–æ—Å—Ç—Ä–µ–µ!',
                    ingredients: '–•–∞–ª–∞–ø–µ–Ω—å—ë, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç—ã, –∂–≥—É—á–∏–π –ø–µ—Ä–µ—Ü, —á–µ—Å–Ω–æ–∫'
                };
            case '–ü–∏—Ü—Ü–∞ 4 —Å–µ–∑–æ–Ω–∞':
                return {
                    description: '–ü–∏—Ü—Ü–∞, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∞—è –≤–∫—É—Å—ã –≤—Å–µ—Ö —Å–µ–∑–æ–Ω–æ–≤. –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–º –∫—É—Å–æ—á–∫–µ.',
                    ingredients: '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç—ã, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, —Å–æ–ª—ë–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏, —Å—ã—Ä –ü–∞—Ä–º–µ–∑–∞–Ω'
                };
            default:
                return {
                    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –ø–∏—Ü—Ü–∞ —Å –º–æ—Ü–∞—Ä–µ–ª–ª–æ–π –∏ —Ç–æ–º–∞—Ç–Ω—ã–º —Å–æ—É—Å–æ–º.',
                    ingredients: '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å'
                };
        }
    }
    
    // –ó–∞–≤—Ç—Ä–∞–∫
    if (categoryId === 2) {
        switch (name) {
            case '–û–º–ª–µ—Ç —Å –≤–µ—Ç—á–∏–Ω–æ–π –∏ –≥—Ä–∏–±–∞–º–∏':
                return {
                    description: '–°—ã—Ç–Ω—ã–π –æ–º–ª–µ—Ç —Å –≤–µ—Ç—á–∏–Ω–æ–π –∏ —à–∞–º–ø–∏–Ω—å–æ–Ω–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω–æ–µ –Ω–∞—á–∞–ª–æ –¥–Ω—è.',
                    ingredients: '–Ø–π—Ü–∞, –≤–µ—Ç—á–∏–Ω–∞, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, –º–æ—Ü–∞—Ä–µ–ª–ª–∞'
                };
            case '–û–º–ª–µ—Ç —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏':
                return {
                    description: '–û—Å—Ç—Ä—ã–π –æ–º–ª–µ—Ç —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏ –∏ —Ç–æ–º–∞—Ç–∞–º–∏. –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –ø–∏–∫–∞–Ω—Ç–Ω–æ–≥–æ –∑–∞–≤—Ç—Ä–∞–∫–∞.',
                    ingredients: '–Ø–π—Ü–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç—ã'
                };
            case '–î—ç–Ω–≤–∏—á –≤–µ—Ç—á–∏–Ω–∞ –∏ —Å—ã—Ä':
                return {
                    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Å—ç–Ω–¥–≤–∏—á —Å –≤–µ—Ç—á–∏–Ω–æ–π –∏ —Å—ã—Ä–æ–º. –ë—ã—Å—Ç—Ä—ã–π –∏ –≤–∫—É—Å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫.',
                    ingredients: '–í–µ—Ç—á–∏–Ω–∞, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Ç–æ–º–∞—Ç—ã, —Å–æ–ª—ë–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏'
                };
            default:
                return {
                    description: '–°–≤–µ–∂–∏–π –∏ –≤–∫—É—Å–Ω—ã–π –∑–∞–≤—Ç—Ä–∞–∫.',
                    ingredients: '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'
                };
        }
    }

    // –ó–∞–∫—É—Å–∫–∏
    if (categoryId === 3) {
        switch (name) {
            case '–î–æ–¥—Å—Ç–µ—Ä':
                return {
                    description: '–°–æ—á–Ω—ã–π –¥–æ–¥—Å—Ç–µ—Ä —Å –∫—É—Ä–∏–Ω—ã–º —Ñ–∏–ª–µ –∏ –æ–≤–æ—â–∞–º–∏. –ò–¥–µ–∞–ª—å–Ω–∞—è –∑–∞–∫—É—Å–∫–∞.',
                    ingredients: '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, —Ç–æ–º–∞—Ç—ã, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —á–µ—Å–Ω–æ–∫'
                };
            case '–û—Å—Ç—Ä—ã–π –ë—É—Ä–≥–µ—Ä üå∂Ô∏èüå∂Ô∏è':
                return {
                    description: '–û—Å—Ç—Ä—ã–π –±—É—Ä–≥–µ—Ä —Å —Ö–∞–ª–∞–ø–µ–Ω—å—ë –∏ –∂–≥—É—á–∏–º –ø–µ—Ä—Ü–µ–º. –î–ª—è –ª—é–±–∏—Ç–µ–ª–µ–π –æ—Å—Ç—Ä–æ–≥–æ!',
                    ingredients: '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, —Ö–∞–ª–∞–ø–µ–Ω—å—ë, –∂–≥—É—á–∏–π –ø–µ—Ä–µ—Ü, —á–µ—Å–Ω–æ–∫'
                };
            case '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –∏–∑ –ø–µ—á–∏ —Å —Å–æ—É—Å–æ–º üå±':
                return {
                    description: '–•—Ä—É—Å—Ç—è—â–∏–π –∫–∞—Ä—Ç–æ—Ñ–µ–ª—å –∏–∑ –ø–µ—á–∏ —Å –∞—Ä–æ–º–∞—Ç–Ω—ã–º —á–µ—Å–Ω–æ—á–Ω—ã–º —Å–æ—É—Å–æ–º.',
                    ingredients: '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å, —á–µ—Å–Ω–æ–∫, —Å—ã—Ä–Ω—ã–π —Å–æ—É—Å'
                };
            case '–ö—É—Ä–∏–Ω—ã–µ –Ω–∞–≥–≥–µ—Ç—Å—ã':
                return {
                    description: '–•—Ä—É—Å—Ç—è—â–∏–µ –∫—É—Ä–∏–Ω—ã–µ –Ω–∞–≥–≥–µ—Ç—Å—ã —Å —á–µ—Å–Ω–æ—á–Ω—ã–º —Å–æ—É—Å–æ–º.',
                    ingredients: '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, –ø–∞–Ω–∏—Ä–æ–≤–∫–∞, —á–µ—Å–Ω–æ–∫'
                };
            default:
                return {
                    description: '–í–∫—É—Å–Ω–∞—è –∑–∞–∫—É—Å–∫–∞ –∏–∑ —Å–≤–µ–∂–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.',
                    ingredients: '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'
                };
        }
    }

    // –ö–æ–∫—Ç–µ–π–ª–∏
    if (categoryId === 4) {
        switch (name) {
            case '–ë–∞–Ω–∞–Ω–æ–≤—ã–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å':
                return {
                    description: '–ù–µ–∂–Ω—ã–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —Å –±–∞–Ω–∞–Ω–æ–º –∏ –≤–∞–Ω–∏–ª—å—é.',
                    ingredients: '–ú–æ–ª–æ–∫–æ, –±–∞–Ω–∞–Ω, –≤–∞–Ω–∏–ª—å'
                };
            case '–ö–∞—Ä–∞–º–µ–ª—å–Ω–æ–µ —è–±–ª–æ–∫–æ –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å':
                return {
                    description: '–°–ª–∞–¥–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å —è–±–ª–æ–∫–æ–º –∏ –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–º —Å–∏—Ä–æ–ø–æ–º.',
                    ingredients: '–ú–æ–ª–æ–∫–æ, —è–±–ª–æ–∫–æ, –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø'
                };
            case '–ú–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —Å –ø–µ—á–µ–Ω—å–µ–º –û—Ä–µ–æ':
                return {
                    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∫–æ–∫—Ç–µ–π–ª—å —Å –ø–µ—á–µ–Ω—å–µ–º –û—Ä–µ–æ –∏ —à–æ–∫–æ–ª–∞–¥–Ω—ã–º —Å–∏—Ä–æ–ø–æ–º.',
                    ingredients: '–ú–æ–ª–æ–∫–æ, –ø–µ—á–µ–Ω—å–µ –û—Ä–µ–æ, —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Å–∏—Ä–æ–ø'
                };
            case '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å üë∂':
                return {
                    description: '–ù–µ–∂–Ω—ã–π –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —Å–æ —Å–ª–∏–≤–∫–∞–º–∏.',
                    ingredients: '–ú–æ–ª–æ–∫–æ, –≤–∞–Ω–∏–ª—å, —Å–ª–∏–≤–∫–∏'
                };
            default:
                return {
                    description: '–û—Å–≤–µ–∂–∞—é—â–∏–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å.',
                    ingredients: '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'
                };
        }
    }

    // –ö–æ—Ñ–µ
    if (categoryId === 5) {
        switch (name) {
            case '–ö–æ—Ñ–µ –õ–∞—Ç—Ç–µ':
                return {
                    description: '–ù–µ–∂–Ω—ã–π –ª–∞—Ç—Ç–µ —Å –º–æ–ª–æ–∫–æ–º –∏ –≤–∞–Ω–∏–ª—å—é.',
                    ingredients: '–≠—Å–ø—Ä–µ—Å—Å–æ, –º–æ–ª–æ–∫–æ, –≤–∞–Ω–∏–ª—å'
                };
            case '–ö–æ—Ñ–µ –ê–º–µ—Ä–∏–∫–∞–Ω–æ':
                return {
                    description: '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –∞–º–µ—Ä–∏–∫–∞–Ω–æ —Å –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–º –≤–∫—É—Å–æ–º.',
                    ingredients: '–≠—Å–ø—Ä–µ—Å—Å–æ, –≤–æ–¥–∞'
                };
            case '–ö–æ—Ñ–µ –ö–æ–∫–æ—Å–æ–≤—ã–π –ª–∞—Ç—Ç–µ':
                return {
                    description: '–≠–∫–∑–æ—Ç–∏—á–µ—Å–∫–∏–π –ª–∞—Ç—Ç–µ —Å –∫–æ–∫–æ—Å–æ–≤—ã–º –º–æ–ª–æ–∫–æ–º.',
                    ingredients: '–≠—Å–ø—Ä–µ—Å—Å–æ, –∫–æ–∫–æ—Å–æ–≤–æ–µ –º–æ–ª–æ–∫–æ, –≤–∞–Ω–∏–ª—å'
                };
            case '–ö–æ—Ñ–µ –ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π –∫–∞–ø—É—á–∏–Ω–æ':
                return {
                    description: '–°–ª–∞–¥–∫–∏–π –∫–∞–ø—É—á–∏–Ω–æ —Å –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–º —Å–∏—Ä–æ–ø–æ–º.',
                    ingredients: '–≠—Å–ø—Ä–µ—Å—Å–æ, –º–æ–ª–æ–∫–æ, –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø'
                };
            case '–ò—Ä–ª–∞–Ω–¥—Å–∫–∏–π –ö–∞–ø—É—á–∏–Ω–æ':
                return {
                    description: '–ê—Ä–æ–º–∞—Ç–Ω—ã–π –∫–∞–ø—É—á–∏–Ω–æ —Å –∏—Ä–ª–∞–Ω–¥—Å–∫–∏–º —Å–∏—Ä–æ–ø–æ–º.',
                    ingredients: '–≠—Å–ø—Ä–µ—Å—Å–æ, –º–æ–ª–æ–∫–æ, –∏—Ä–ª–∞–Ω–¥—Å–∫–∏–π —Å–∏—Ä–æ–ø'
                };
            default:
                return {
                    description: '–°–≤–µ–∂–µ—Å–≤–∞—Ä–µ–Ω–Ω—ã–π –∫–æ—Ñ–µ.',
                    ingredients: '–°–≤–µ–∂–µ—Å–≤–∞—Ä–µ–Ω–Ω—ã–π –∫–æ—Ñ–µ'
                };
        }
    }

    return {
        description: '–í–∫—É—Å–Ω–æ–µ –±–ª—é–¥–æ –∏–∑ —Å–≤–µ–∂–∏—Ö –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤.',
        ingredients: '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'
    };
};

export const ProductModal: React.FC<Props> = ({ product, className }) => {
  const router = useRouter();
  const [isNotificationVisible, setIsNotificationVisible] = useState(false);
  const { addItem } = useCart();
  const { description, ingredients } = getProductDescription(product.name, product.categoryId);

  const handleAddToCart = () => {
    addItem({
      id: product.id,
      name: product.name,
      price: product.price,
      quantity: 1,
      image: product.imageUrl
    });
    setIsNotificationVisible(true);
  };

  return (
    <>
      <Dialog open={Boolean(product)} onOpenChange={() => router.back()}>
          <DialogContent  
              className={cn(
                'p-0 w-full max-w-sm sm:max-w-lg md:max-w-xl lg:max-w-2xl min-h-[500px] max-h-[500vh] bg-white overflow-hidden', 
                className,
              )}>
              <div className="flex flex-col lg:flex-row">
                  <div className="w-full lg:w-1/2 p-6 lg:p-8 bg-secondary">
                      <div className="flex justify-center items-center h-full">
                          <Image 
                              src={product.imageUrl} 
                              alt={product.name} 
                              width={300}
                              height={300}
                              className="w-[300px] h-[300px] object-contain"
                          />
                      </div>
                  </div>
                  <div className="w-full lg:w-1/2 p-6 lg:p-8">
                      <div className="flex justify-between items-start mb-6">
                          <h2 className="text-2xl font-bold">{product.name}</h2>
                      </div>
                      <div className="space-y-6">
                          <div>
                              <h3 className="text-lg font-semibold mb-2">–û–ø–∏—Å–∞–Ω–∏–µ</h3>
                              <p className="text-gray-600">
                                  {description}
                              </p>
                          </div>
                          <div>
                              <h3 className="text-lg font-semibold mb-2">–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã</h3>
                              <p className="text-gray-600">
                                  {ingredients}
                              </p>
                          </div>
                          <div className="flex items-center justify-between pt-6 border-t">
                              <div className="text-2xl font-bold">
                                  {product.price} BYN
                              </div>
                              <Button 
                                  className="flex items-center gap-2"
                                  onClick={handleAddToCart}
                              >
                                  <Plus size={20} />
                                  –î–æ–±–∞–≤–∏—Ç—å –≤ –∫–æ—Ä–∑–∏–Ω—É
                              </Button>
                          </div>
                      </div>
                  </div>
              </div>
          </DialogContent>
      </Dialog>
      <Notification
          message="–í–∞—à —Ç–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É"
          isVisible={isNotificationVisible}
          onClose={() => setIsNotificationVisible(false)}
      />
    </>
  );
}; 