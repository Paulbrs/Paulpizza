import Link from 'next/link';
import React from 'react';
import { Title } from './title';
import { Button } from '../ui';
import { Plus } from 'lucide-react';
import { cn } from '@/shared/lib/utils';
import Image from 'next/image';
import { useRouter } from 'next/navigation';

interface Props {
  id: number;
  name: string;
  price: number;
  imageUrl: string;
  className?: string;
  categoryId?: number;
}

const getIngredients = (name: string, categoryId?: number): string => {
  // –ü–∏—Ü—Ü—ã
  if (categoryId === 1) {
    switch (name) {
      case '–ü–∏—Ü—Ü–∞ –ü–µ–ø–ø–µ—Ä–æ–Ω–∏':
        return '–ü–µ–ø–ø–µ—Ä–æ–Ω–∏, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å, —á–µ—Å–Ω–æ–∫';
      case '–ü–∏—Ü—Ü–∞ –ì—Ä–∏–±–Ω–∞—è':
        return '–®–∞–º–ø–∏–Ω—å–æ–Ω—ã, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Å—ã—Ä–Ω—ã–π —Å–æ—É—Å, —á–µ—Å–Ω–æ–∫';
      case '–ü–∏—Ü—Ü–∞ –•–∞–ª–∞–ø–µ–Ω—å—ë':
        return '–•–∞–ª–∞–ø–µ–Ω—å—ë, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç—ã, –∂–≥—É—á–∏–π –ø–µ—Ä–µ—Ü, —á–µ—Å–Ω–æ–∫';
      case '–ü–∏—Ü—Ü–∞ 4 —Å–µ–∑–æ–Ω–∞':
        return '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç—ã, –∫—Ä–∞—Å–Ω—ã–π –ª—É–∫, —Å–æ–ª—ë–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏, —Å—ã—Ä –ü–∞—Ä–º–µ–∑–∞–Ω';
      default:
        return '–ú–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç–Ω—ã–π —Å–æ—É—Å';
    }
  }
  
  // –ó–∞–≤—Ç—Ä–∞–∫
  if (categoryId === 2) {
    switch (name) {
      case '–û–º–ª–µ—Ç —Å –≤–µ—Ç—á–∏–Ω–æ–π –∏ –≥—Ä–∏–±–∞–º–∏':
        return '–Ø–π—Ü–∞, –≤–µ—Ç—á–∏–Ω–∞, —à–∞–º–ø–∏–Ω—å–æ–Ω—ã, –º–æ—Ü–∞—Ä–µ–ª–ª–∞';
      case '–û–º–ª–µ—Ç —Å –ø–µ–ø–ø–µ—Ä–æ–Ω–∏':
        return '–Ø–π—Ü–∞, –ø–µ–ø–ø–µ—Ä–æ–Ω–∏, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —Ç–æ–º–∞—Ç—ã';
      case '–î—ç–Ω–≤–∏—á –≤–µ—Ç—á–∏–Ω–∞ –∏ —Å—ã—Ä':
        return '–í–µ—Ç—á–∏–Ω–∞, —Å—ã—Ä —á–µ–¥–¥–µ—Ä, —Ç–æ–º–∞—Ç—ã, —Å–æ–ª—ë–Ω—ã–µ –æ–≥—É—Ä—á–∏–∫–∏';
      default:
        return '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã';
    }
  }

  // –ó–∞–∫—É—Å–∫–∏
  if (categoryId === 3) {
    switch (name) {
      case '–î–æ–¥—Å—Ç–µ—Ä':
        return '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, —Ç–æ–º–∞—Ç—ã, –º–æ—Ü–∞—Ä–µ–ª–ª–∞, —á–µ—Å–Ω–æ–∫';
      case '–û—Å—Ç—Ä—ã–π –±—É—Ä–≥–µ—Ä üå∂Ô∏èüå∂Ô∏è':
        return '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, —Ö–∞–ª–∞–ø–µ–Ω—å—ë, –∂–≥—É—á–∏–π –ø–µ—Ä–µ—Ü, —á–µ—Å–Ω–æ–∫';
      case '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å –∏–∑ –ø–µ—á–∏ —Å —Å–æ—É—Å–æ–º üå±':
        return '–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å, —á–µ—Å–Ω–æ–∫, —Å—ã—Ä–Ω—ã–π —Å–æ—É—Å';
      case '–ö—É—Ä–∏–Ω—ã–µ –Ω–∞–≥–≥–µ—Ç—Å—ã':
        return '–ö—É—Ä–∏–Ω–æ–µ —Ñ–∏–ª–µ, –ø–∞–Ω–∏—Ä–æ–≤–∫–∞, —á–µ—Å–Ω–æ–∫';
      default:
        return '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã';
    }
  }

  // –ö–æ–∫—Ç–µ–π–ª–∏
  if (categoryId === 4) {
    switch (name) {
      case '–ë–∞–Ω–∞–Ω–æ–≤—ã–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å':
        return '–ú–æ–ª–æ–∫–æ, –±–∞–Ω–∞–Ω, –≤–∞–Ω–∏–ª—å';
      case '–ö–∞—Ä–∞–º–µ–ª—å–Ω–æ–µ —è–±–ª–æ–∫–æ –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å':
        return '–ú–æ–ª–æ–∫–æ, —è–±–ª–æ–∫–æ, –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø';
      case '–ú–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å —Å –ø–µ—á–µ–Ω—å–µ–º –û—Ä–µ–æ':
        return '–ú–æ–ª–æ–∫–æ, –ø–µ—á–µ–Ω—å–µ –û—Ä–µ–æ, —à–æ–∫–æ–ª–∞–¥–Ω—ã–π —Å–∏—Ä–æ–ø';
      case '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –º–æ–ª–æ—á–Ω—ã–π –∫–æ–∫—Ç–µ–π–ª—å üë∂':
        return '–ú–æ–ª–æ–∫–æ, –≤–∞–Ω–∏–ª—å, —Å–ª–∏–≤–∫–∏';
      default:
        return '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã';
    }
  }

  // –ö–æ—Ñ–µ
  if (categoryId === 5) {
    switch (name) {
      case '–ö–æ—Ñ–µ –õ–∞—Ç—Ç–µ':
        return '–≠—Å–ø—Ä–µ—Å—Å–æ, –º–æ–ª–æ–∫–æ, –≤–∞–Ω–∏–ª—å';
      case '–ö–æ—Ñ–µ –ê–º–µ—Ä–∏–∫–∞–Ω–æ':
        return '–≠—Å–ø—Ä–µ—Å—Å–æ, –≤–æ–¥–∞';
      case '–ö–æ—Ñ–µ –ö–æ–∫–æ—Å–æ–≤—ã–π –ª–∞—Ç—Ç–µ':
        return '–≠—Å–ø—Ä–µ—Å—Å–æ, –∫–æ–∫–æ—Å–æ–≤–æ–µ –º–æ–ª–æ–∫–æ, –≤–∞–Ω–∏–ª—å';
      case '–ö–æ—Ñ–µ –ö–∞—Ä–∞–º–µ–ª—å–Ω—ã–π –∫–∞–ø—É—á–∏–Ω–æ':
        return '–≠—Å–ø—Ä–µ—Å—Å–æ, –º–æ–ª–æ–∫–æ, –∫–∞—Ä–∞–º–µ–ª—å–Ω—ã–π —Å–∏—Ä–æ–ø';
      case '–ò—Ä–ª–∞–Ω–¥—Å–∫–∏–π –ö–∞–ø—É—á–∏–Ω–æ':
        return '–≠—Å–ø—Ä–µ—Å—Å–æ, –º–æ–ª–æ–∫–æ, –∏—Ä–ª–∞–Ω–¥—Å–∫–∏–π —Å–∏—Ä–æ–ø';
      default:
        return '–°–≤–µ–∂–µ—Å–≤–∞—Ä–µ–Ω–Ω—ã–π –∫–æ—Ñ–µ';
    }
  }

  return '–°–≤–µ–∂–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã';
};

export const ProductCard: React.FC<Props> = ({
  id,
  name,
  price,
  imageUrl,
  className,
  categoryId,
}) => {
  const router = useRouter();

  const handleClick = (e: React.MouseEvent) => {
    e.preventDefault();
    router.push(`/product/${id}`);
  };

  return (
    <div className={cn('group transition-transform duration-300 hover:scale-105', className)}>
      <div onClick={handleClick} className="cursor-pointer">
        <div className="flex justify-center p-4 sm:p-5 lg:p-6 bg-secondary rounded-lg h-[200px] sm:h-[220px] lg:h-[260px]">
          <img className="w-[160px] h-[160px] sm:w-[180px] sm:h-[180px] lg:w-[215px] lg:h-[215px] rounded-full" src={imageUrl} alt={name} />
        </div>

        <Title text={name} size="sm" className="mb-1 mt-2 sm:mt-3 font-bold text-base sm:text-lg" />

        <p className='text-xs sm:text-sm text-gray-400 line-clamp-2'>
          {getIngredients(name, categoryId)}
        </p>

        <div className='flex items-center justify-between mt-3 sm:mt-4'>
          <span className='text-base sm:text-lg lg:text-[20px]'>
            –æ—Ç <b>{price} BYN</b>
          </span>

          <Button variant='secondary' className='variant-base font-bold text-sm sm:text-base'>
            <Plus size={16} className='mr-1 sm:mr-1 lg:mr-1'/>
            –î–æ–±–∞–≤–∏—Ç—å
          </Button>
        </div>
      </div>
    </div>
  );
};
